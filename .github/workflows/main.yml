name: CI Front

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Cloner le code
        uses: actions/checkout@v3

      - name: Installer Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # adapte si tu utilises une autre version

      - name: Installer les dépendances
        run: npm ci

      - name: Compiler le projet
        run: npm run build

      - name: Lancer les tests (si définis)
        run: npm run test || echo "Pas de tests définis"


jobs:
  # ton job "test" existe déjà

  security:
    name: Security checks
    runs-on: [self-hosted, macos]
    steps:
      - uses: actions/checkout@v4

      # Audit des dépendances
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - name: npm audit (fail on high)
        run: npm audit --audit-level=high

      # Secrets scan
      - name: Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: --redact

      # SAST JS/TS (OWASP Top 10)
      - name: Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: p/javascript,p/owasp-top-ten
          auditOn: push

      # Vulns projet (lockfiles / config)
      - name: Trivy FS scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: fs
          ignore-unfixed: true
          severity: CRITICAL,HIGH
          exit-code: '1'



  deploy:
    needs: test
    runs-on: self-hosted

    steps:
      - name: Cloner le dépôt
        uses: actions/checkout@v3

      - name: Build du projet Vite
        run: npm install && npm run build

      - name: Supprimer l’ancien conteneur (s’il existe)
        run: docker rm -f cesizen-front || true

      - name: Build image
        run: docker build -t cesizen-front .

      - name: Lancer le conteneur
        run: docker run -d --name cesizen-front -p 8080:80 cesizen-front
